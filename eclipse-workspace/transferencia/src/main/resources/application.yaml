server:
  port: 9000
spring:
  kafka:
    consumer:
      bootstrap-servers: kafka-svc:9092
      group-id: tef-groupid
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: kafka-svc:9092
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    bootstrap-servers:
    - kafka-svc:9092
  boot:
    admin:
      client:
        url: http://springadmin-svc:8081
        instance:
          name: Transferencia-Rest
          health-url: http://ingresshost:9000/actuator/health
          management-base-url: http://ingresshost:9000/
          service-url: http://ingresshost:9000 
  #        health-url: http://ingresshost:30010/actuator/health
 #         management-base-url: http://ingresshost:30010/
#          service-url: http://ingresshost:30010 
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
info:
  app: 
    name: "@project.name@"
    version: "@project.version@"
opentracing:
  jaeger:
    udp-sender:
      host: localhost
      port: 6831
#JAEGER_SERVICE_NAME: spring-tranferencia
#JAEGER_ENDPOINT: http://localhost:14268/api/traces
#JAEGER_SAMPLER_TYPE: probabilistic
#JAEGER_SAMPLER_PARAM: 0.1